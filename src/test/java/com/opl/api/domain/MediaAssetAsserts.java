package com.opl.api.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MediaAssetAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaAssetAllPropertiesEquals(MediaAsset expected, MediaAsset actual) {
        assertMediaAssetAutoGeneratedPropertiesEquals(expected, actual);
        assertMediaAssetAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaAssetAllUpdatablePropertiesEquals(MediaAsset expected, MediaAsset actual) {
        assertMediaAssetUpdatableFieldsEquals(expected, actual);
        assertMediaAssetUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaAssetAutoGeneratedPropertiesEquals(MediaAsset expected, MediaAsset actual) {
        assertThat(expected)
            .as("Verify MediaAsset auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaAssetUpdatableFieldsEquals(MediaAsset expected, MediaAsset actual) {
        assertThat(expected)
            .as("Verify MediaAsset relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getContent()).as("check content").isEqualTo(actual.getContent()))
            .satisfies(
                e -> assertThat(e.getContentContentType()).as("check content contenty type").isEqualTo(actual.getContentContentType())
            )
            .satisfies(e -> assertThat(e.getSortIndex()).as("check sortIndex").isEqualTo(actual.getSortIndex()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaAssetUpdatableRelationshipsEquals(MediaAsset expected, MediaAsset actual) {
        assertThat(expected)
            .as("Verify MediaAsset relationships")
            .satisfies(e -> assertThat(e.getPractices()).as("check practices").isEqualTo(actual.getPractices()));
    }
}
